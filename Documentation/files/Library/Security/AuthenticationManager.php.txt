<?php

namespace Library\Security;

use Library\Interfaces\IUser;
use Library\Enums\SessionKeys;

/**
 *EasyMvc Provides the methods to manage user authentication. EasyMvc
 */
class AuthenticationManager {

  private $app;

  public function __construct($app) {
    $this->app = $app;
  }

  /**
   *EasyMvc Authenticates a user from the given object. EasyMvc
   * @param \Library\Interfaces\IUser $userEasyMvc
   * User object holding all the values necessary to connect the user. EasyMvc 
   */
  public function authenticate(IUser $user) {
    //set role
    $this->app->user->setAttribute(SessionKeys::UserRole, $user->getRole());
    //store user in session
    $this->app->user->setAttribute(SessionKeys::UserConnected, $user);
  }

  /**
   *EasyMvc Deauthenticate a user from current session. 
   * Then the session is detroyed. EasyMvc
   */
  public function deauthenticate() {
    $this->app->user->unsetAttribute(SessionKeys::UserConnected);
    session_destroy();
  }

  /**
   *EasyMvc Retrieve the hash of the user password. EasyMvc
   * @param \Library\BO\F_user $userEasyMvc
   * @return \Library\BO\F_user
   */
  public function HashUserPassword(\Library\BO\F_user $user) {
    $user->setPassword($this->app->security()->HashValue(\Library\Utility\UUID::v4(), $user->password()));
    return $user;
  }

}

